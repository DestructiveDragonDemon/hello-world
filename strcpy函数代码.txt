package calculator;
import java.util.*;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
//编辑
public class View extends JFrame implements ActionListener{

	JTextField showInfo = null;
	JButton backspace, clear, zero, one ,two,
		three, four, five, six, seven, eight, nine,
		add, subtract, multiply, divide, equals,point;
	JPanel jp1 , jp2 , jp3;
	
	public View() {
		showInfo = new JTextField(33);
		showInfo.setHorizontalAlignment(JTextField.RIGHT);
		showInfo.setFont(new Font("Times New Roman",Font.PLAIN,40));
		
		//showInfo.setEnabled(false);
		backspace  = new JButton("Backspace");
		backspace.setFont(new Font("Times New Roman",Font.PLAIN,30));
		backspace.setForeground(Color.red);
		backspace.addActionListener(this);
		clear = new JButton("Clear");
		clear.setFont(new Font("Times New Roman",Font.PLAIN,30));
		clear.setForeground(Color.red);
		clear.addActionListener(this);
		zero = new JButton("0");
		zero.setFont(new Font("Times New Roman",Font.PLAIN,30));
		zero.setForeground(Color.BLUE);
		zero.addActionListener(this);
		one = new JButton("1");
		one.setFont(new Font("Times New Roman",Font.PLAIN,30));
		one.setForeground(Color.BLUE);
		one.addActionListener(this);
		two = new JButton("2");
		two.setFont(new Font("Times New Roman",Font.PLAIN,30));
		two.setForeground(Color.BLUE);
		two.addActionListener(this);
		three = new JButton("3");
		three.setFont(new Font("Times New Roman",Font.PLAIN,30));
		three.setForeground(Color.BLUE);
		three.addActionListener(this);
		four = new JButton("4");
		four.setFont(new Font("Times New Roman",Font.PLAIN,30));
		four.setForeground(Color.BLUE);
		four.addActionListener(this);
		five = new JButton("5");
		five.setFont(new Font("Times New Roman",Font.PLAIN,30));
		five.setForeground(Color.BLUE);
		five.addActionListener(this);
		six = new JButton("6");
		six.setFont(new Font("Times New Roman",Font.PLAIN,30));
		six.setForeground(Color.BLUE);
		six.addActionListener(this);
		seven = new JButton("7");
		seven.setFont(new Font("Times New Roman",Font.PLAIN,30));
		seven.setForeground(Color.BLUE);
		seven.addActionListener(this);
		eight = new JButton("8");
		eight.setFont(new Font("Times New Roman",Font.PLAIN,30));
		eight.setForeground(Color.BLUE);
		eight.addActionListener(this);
		nine = new JButton("9");
		nine.setFont(new Font("Times New Roman",Font.PLAIN,30));
		nine.setForeground(Color.BLUE);
		nine.addActionListener(this);
		add = new JButton("+");
		add.setFont(new Font("Times New Roman",Font.PLAIN,30));
		add.setForeground(Color.red);
		add.addActionListener(this);
		subtract  = new JButton("-");
		subtract.setFont(new Font("Times New Roman",Font.PLAIN,30));
		subtract.setForeground(Color.red);
		subtract.addActionListener(this);
		multiply = new JButton("*");
		multiply.setFont(new Font("Times New Roman",Font.PLAIN,30));
		multiply.setForeground(Color.red);
		multiply.addActionListener(this);
		divide = new JButton("/");
		divide.setFont(new Font("Times New Roman",Font.PLAIN,30));
		divide.setForeground(Color.red);
		divide.addActionListener(this);
		equals = new JButton("=");
		equals.setFont(new Font("Times New Roman",Font.PLAIN,30));
		equals.setForeground(Color.red);
		equals.addActionListener(this);
		point = new JButton(".");
		point.setFont(new Font("Times New Roman",Font.PLAIN,30));
		point.setForeground(Color.red);
		point.addActionListener(this);
		
		jp1 = new JPanel();
		jp2 = new JPanel();
		jp3 = new JPanel();
		
		jp1.add(showInfo);
		jp1.setLayout(new GridLayout(1,1));
		
		jp2.add(backspace);
		jp2.add(clear);
		jp2.setLayout(new GridLayout(1,2,3,3));
		
		jp3.add(seven);
		jp3.add(eight);
		jp3.add(nine);
		jp3.add(divide);
		jp3.add(four);
		jp3.add(five);
		jp3.add(six);
		jp3.add(multiply);
		jp3.add(one);
		jp3.add(two);
		jp3.add(three);
		jp3.add(subtract);
		jp3.add(zero);
		jp3.add(point);
		jp3.add(add);
		jp3.add(equals);
		jp3.setLayout(new GridLayout(4,4,3,3));
		
		this.add(jp1,BorderLayout.NORTH);
		this.add(jp2,BorderLayout.SOUTH);
		this.add(jp3);
		this.setTitle("Calculator");
		this.setSize(600, 400);
		this.setVisible(true);
		this.setLocation(700, 300);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	
	public static void main(String args[]) {
		new View();
	}
	
	
	 StringBuffer input = new StringBuffer();
	 public void actionPerformed(ActionEvent e)   
	    {  
	        int flag = 0;  
	        String actionCommand = e.getActionCommand();  
	        if(actionCommand.equals("+")||actionCommand.equals("-")||actionCommand.equals("*") ||actionCommand.equals("/"))  
	        	
	        	input.append(" ").append(actionCommand).append(" ");
	        
	    
	        else if(actionCommand.equals("Clear"))  
	        	input = new StringBuffer("");
	        
	        else if(actionCommand.equals("Backspace")) {
	        	input.deleteCharAt(input.length()-1);
	        }
	        else if(actionCommand.equals("="))
	        {  
	        	String s=compute(input.toString());
	        	input.append("=").append(s);
	        	
	            showInfo.setText(input.toString());   
	            input = new StringBuffer("");
	            flag = 1;  
	        }  
	        else    
	        	input.append(actionCommand);
	        if(flag==0)  
	        showInfo.setText(input.toString());  
	    }  
	 
	    private String compute(String input)
	    {  
	        String str[];  
	        str = input.split(" ");  
	        Stack<Double> s = new Stack<Double>();  
	        double m = Double.parseDouble(str[0]);  
	        s.push(m);  
	        for(int i=1;i<str.length;i++)  
	        {  
	            if(i%2==1)    
	            {    
	                if(str[i].compareTo("+")==0)    
	                {    
	                    double help = Double.parseDouble(str[i+1]);    
	                    s.push(help);    
	                }    
	                    
	                if(str[i].compareTo("-")==0)    
	                {    
	                    double help = Double.parseDouble(str[i+1]);    
	                    s.push(-help);    
	                }    
	                    
	                if(str[i].compareTo("*")==0)    
	                {    
	                    double help = Double.parseDouble(str[i+1]);    	              
	                    double ans = s.pop();
	                    
	                    ans*=help;    
	                    s.push(ans);    
	                }    
	                    
	                if(str[i].compareTo("/")==0)    
	                {    
	                    double help = Double.parseDouble(str[i+1]);    
	                    double ans = s.pop();    	                      
	                    ans/=help;    
	                    s.push(ans);    
	                }    
	            }    
	        }    
	        double ans = 0d;    
	        while(!s.isEmpty())    
	        {    
	            ans+=s.peek();    
	            s.pop();    
	        }    
	        String result = String.valueOf(ans);  
	        return result;  
	    }  
}
